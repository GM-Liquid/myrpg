name: Build & Publish Release (every push)

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write        # –Ω—É–∂–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–≥–æ–≤/—Ä–µ–ª–∏–∑–æ–≤

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # 1. –ò—Å—Ö–æ–¥–Ω–∏–∫–∏
      - uses: actions/checkout@v4

      # 2. –î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–Ω–∞—è –ø–∞–ø–∫–∞
      - name: Prepare dist
        run: |
          rm -rf dist && mkdir dist
          cp -R module templates css lang assets dist/ 2>/dev/null || true
          cp system.json template.json README.md LICENSE dist/ 2>/dev/null || true

      # 3. ZIP (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è –¥–ª—è Foundry)
      - name: Zip package
        run: |
          cd dist && zip -r ../myrpg.zip .

      # 4. –§–æ—Ä–º–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–µ–≥ ‚Äî –≤—ã–≤–æ–¥–∏–º –∫–∞–∫ output
      - name: Generate release tag
        id: tag
        run: echo "tag_name=build-${{ github.run_number }}" >> $GITHUB_OUTPUT

      # 5. –ü—É–±–ª–∏–∫—É–µ–º –Ω–æ–≤—ã–π —Ä–µ–ª–∏–∑ (–∏—Å–ø–æ–ª—å–∑—É–µ–º output)
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}      # ‚Üê –∑–¥–µ—Å—å
          name: "Build ${{ steps.tag.outputs.tag_name }}"  # ‚Üê –∏ –∑–¥–µ—Å—å
          body: |
            üõ†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ —Å –∫–æ–º–º–∏—Ç–∞ ${{ github.sha }}.
            * `myrpg.zip` ‚Äî –ø–∞–∫–µ—Ç —Å–∏—Å—Ç–µ–º—ã
            * `system.json` ‚Äî –º–∞–Ω–∏—Ñ–µ—Å—Ç
          files: |
            myrpg.zip
            system.json
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 6. –£–±–æ—Ä–∫–∞ –∑–∞ —Å–æ–±–æ–π
      - run: rm -rf dist myrpg.zip