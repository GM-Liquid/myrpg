name: Auto-Release

on:
  push:
    branches: [main] # Можно указать конкретную ветку или убрать, чтобы реагировать на пуш в любую ветку

permissions:
  contents: write

jobs:
  create_and_upload:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Define Tag
        run: echo "TAG=build-${{ github.sha }}" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'auto-${{ github.run_id }}'
          release_name: 'Release ${{ github.run_id }}'
          draft: false
          prerelease: false

      - run: zip myrpg.zip -r lang module templates lib css assets system.json template.json

      - name: Upload Release Asset(s)
        uses: sekwah41/upload-release-assets@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: './system.json'

      - name: Upload Release Assets
        uses: sekwah41/upload-release-assets@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: myrpg.zip

      - name: Delete Old Releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Получаем список релизов, кроме последнего
          releases=$(gh api repos/${{ github.repository }}/releases --jq '.[1:] | map(.id)')
          echo "Releases to delete: $releases"

          # Удаляем релизы по их ID
          for release_id in $releases; do
            echo "Deleting release ID: $release_id"
            gh api \
              -X DELETE \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/releases/$release_id || echo "Failed to delete release $release_id"
          done
