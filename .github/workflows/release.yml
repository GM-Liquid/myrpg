name: Build & Publish Latest Release

on:
  push:
    branches: [ "main" ]      # триггер на любой пуш в main
    paths-ignore:             # изменения, на которые НЕ реагируем
      - ".github/**"
      - "**/*.md"
      - ".prettierrc*"
      - "eslint.*"
      - ".gitignore"
      - "package*.json"
      - "node_modules/**"

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем репозиторий
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Создаём временную папку dist/ и копируем в неё ТОЛЬКО нужные файлы
      - name: Prepare distribution folder
        run: |
          rm -rf dist
          mkdir -p dist
          cp -R module templates css lang assets dist/
          cp system.json template.json README.md LICENSE dist/ 2>/dev/null || true

      # 3. Упаковываем ZIP (имя фиксированное, чтобы легко ссылаться)
      - name: Zip distribution
        run: |
          cd dist
          zip -r ../myrpg-latest.zip .

      # 4. Создаём / обновляем релиз с тегом latest
      - name: Publish or update GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest                 # всегда один и тот же тег
          name: Latest build (auto)
          body: |
            ⚠️ **Автоматическая сборка** — формируется при каждом push в `main`.
            Содержит только файлы системы, без исходных dev-зависимостей.
          draft: false
          prerelease: false
          files: |
            myrpg-latest.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 5. Чистим артефакт (не обязателен, просто аккуратно)
      - name: Remove local artefacts
        run: rm -rf dist myrpg-latest.zip
